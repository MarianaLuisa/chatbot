# -*- coding: utf-8 -*-
"""neural_networks_chatbot

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1eUgnK8B604bpet2AZ8ZIN5_-Z6PJGdwe
"""

!pip install python-aiml

# Commented out IPython magic to ensure Python compatibility.
from google.colab import drive
drive.mount('/content/drive')
#get_ipython().run_line_magic('cd', '"/content/drive/MyDrive/4o semestre/inteligência artificial/trabalho final IA/"')

# %cd "/content/drive/MyDrive/4o semestre/inteligência artificial/trabalho final IA/"

from google.colab import drive
drive.mount('/content/drive')

import aiml

# Criar o kernel AIML
kernel = aiml.Kernel()

# Caminho do arquivo AIML emi
base_conhecimento_aiml_file = '/content/drive/MyDrive/4o semestre/inteligência artificial/trabalho final IA/base.aiml'

# Caminho do arquivo AIML mari
#base_conhecimento_aiml_file = '/content/drive/MyDrive/UFCSPA/4º Semestre/IA/trabalho final IA/base.aiml'

# Carregar os arquivos AIML
kernel.learn(base_conhecimento_aiml_file)

# Diálogo com o chatbot
print("Chatbot Especialista em Redes Neurais Artificiais:")
print("Olá! Como posso ajudar você hoje? (Digite 'sair' para encerrar)")

# Esse trecho de código representa a estrutura básica de um ciclo de interação com o usuário. O chatbot solicita uma entrada, processa a entrada usando o kernel AIML para gerar uma resposta e exibe essa resposta. O loop continua até que o usuário escolha encerrar digitando 'sair'.

# loop infinito, que continuará executando até ser explicitamente interrompido pelo comando break. Isso permite que o chatbot interaja repetidamente com o usuário.
while True:
  # Solicita ao usuário que insira uma mensagem. O valor inserido pelo usuário é armazenado na variável user_input.
    user_input = input("Você: ").lower()

# Verifica se a entrada do usuário (convertida para minúsculas usando lower()) é igual a 'sair'. Se for, o chatbot exibe uma mensagem de despedida, imprime "Até logo!" e interrompe o loop usando break, encerrando a interação.
    if user_input.lower() == 'sair':
        print("Chatbot: Até logo!")
        break

# Usa o kernel AIML para gerar uma resposta com base na entrada do usuário. A função respond do kernel AIML busca padrões na base de conhecimento AIML que correspondam à entrada do usuário e retorna a resposta correspondente.
    response = kernel.respond(user_input)

# Exibe a resposta gerada pelo chatbot. A resposta é formatada como "Chatbot: [resposta]" e é apresentada ao usuário.
    print(f"Chatbot: {response}")